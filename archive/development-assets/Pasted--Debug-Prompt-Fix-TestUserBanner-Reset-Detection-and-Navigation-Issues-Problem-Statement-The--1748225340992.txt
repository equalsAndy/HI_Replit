
# Debug Prompt: Fix TestUserBanner Reset Detection and Navigation Issues

## Problem Statement
The reset data functionality has a comprehensive backend system that works correctly, but there are frontend issues with test user detection and reset button accessibility.

## Current System Status
✅ **Working Components:**
- Backend reset system (`ResetService` class) - fully functional
- Database operations - clearing assessments and navigation progress
- API endpoints at `/api/test-users/reset/:userId` - properly registered
- Session-based authentication - working correctly

❌ **Current Issues:**
1. **Test User Detection:** User "bobby" (Bob Dylan) isn't detected as a test user
2. **Reset Button Access:** TestUserBanner not showing for legitimate test users
3. **Navigation Progress:** May need better database sync

## System Architecture (Current)

### Backend (Working)
- **Service:** `server/services/reset-service.ts` - ResetService class
- **Routes:** `server/routes/user-routes.ts` - includes reset endpoints  
- **Database:** Uses session-based auth, stores navigationProgress in users table
- **Endpoint:** `POST /api/test-users/reset/:userId`

### Frontend (Needs Fix)
- **Component:** `client/src/components/test-users/TestUserBanner.tsx`
- **Detection Logic:** Currently uses regex pattern that excludes "bobby"
- **Navigation Hook:** `client/src/hooks/use-navigation-progress.ts`

## Specific Issues to Fix

### Issue 1: Test User Detection Logic
**File:** `client/src/components/test-users/TestUserBanner.tsx`
**Line 35:** 
```typescript
const isTestUser = user?.isTestUser || /^(admin|participant|participant\d+|facilitator|facilitator\d+|user\d+)$/i.test(user?.username || '');
```

**Problem:** Username "bobby" doesn't match the regex pattern, and `user?.isTestUser` is `false`

### Issue 2: Database vs. Frontend Sync
**Files:** 
- `client/src/hooks/use-navigation-progress.ts`
- `client/src/pages/allstarteams.tsx`

**Problem:** Navigation progress should sync between localStorage and database consistently

## Debugging Steps

### Step 1: Fix Test User Detection
Update the regex pattern in TestUserBanner.tsx to include more flexible username patterns:
```typescript
const isTestUser = user?.isTestUser || 
  /^(admin|participant|participant\d+|facilitator|facilitator\d+|user\d+|bobby|test)$/i.test(user?.username || '') ||
  user?.username?.toLowerCase().includes('test');
```

### Step 2: Verify Reset Flow
1. User clicks "Reset Data" button in TestUserBanner
2. Button navigates to `/workshop-reset` page
3. Reset page should call `POST /api/test-users/reset/${userId}`
4. Backend clears all user assessments and navigation progress
5. Frontend should invalidate queries and clear localStorage

### Step 3: Test Current Reset Functionality
```bash
# Test the reset endpoint directly
curl -X POST http://localhost:5000/api/test-users/reset/18 \
  -H "Content-Type: application/json" \
  -H "Cookie: connect.sid=s:VAhU2QkXxvE4LoOydl6M0o3THV1gkNkG.DDI7dxgeDGcQgNyNCeqFU2GES4qe1R40NNr9SySNXcw"
```

## Expected Reset Results
After successful reset:
- All entries in `user_assessments` table for the user should be deleted
- User's `navigationProgress` field should be set to null
- Frontend localStorage should be cleared
- User should see empty/fresh state in the workshop

## Quick Verification
**Console logs show the reset is working:**
- "=== RESET: Starting data reset for user 15 ==="
- "=== RESET: Completed data reset for user 15 ==="

**The main issue is frontend test user detection, not backend functionality.**

## Files to Focus On
1. `client/src/components/test-users/TestUserBanner.tsx` - Fix user detection
2. `client/src/pages/workshop-reset-test.tsx` - Ensure proper reset UI
3. `client/src/hooks/use-navigation-progress.ts` - Verify database sync

## Success Criteria
1. User "bobby" shows TestUserBanner with reset button
2. Reset button successfully clears all user data
3. Navigation progress syncs properly between database and frontend
4. User can start fresh after reset

This prompt reflects the current working state of your reset system and focuses on the actual issues that need fixing.
