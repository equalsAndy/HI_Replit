# Enhanced User Profile System for AllStarTeams Workshop

Enhance the existing React/TypeScript allstarteams workshop application to add comprehensive user profile management that integrates with the current user system and displays on star cards.

## Core Requirements

### Profile Enhancement
Extend the existing user profiles to include:
- **Name** (already exists)
- **Email** (already exists) 
- **Job Title** (add new field)
- **Company** (add new field)
- **Profile Picture** (add new field with 2MB max file size)

### User Role Distinctions
Enhance the existing user system with simple role-based permissions:
- **Admin** - Can manage all users and profiles, create facilitators
- **Facilitator** - Can manage participant profiles they're responsible for, organize participants into cohorts
- **Participant** - Can manage their own profile

### Star Card Integration
- Display complete profile information (name, job title, company, profile picture) on star cards throughout the workshop interface
- Ensure consistent formatting and responsive design
- Handle missing profile data gracefully (show defaults/placeholders)

### Profile Management Interface
Create user-friendly profile management:
- **Profile editing form** with all fields
- **Image upload component** with preview and validation
- **Save/update functionality** with proper error handling
- **Admin/facilitator interface** to view and edit participant profiles when authorized
- **Cohort management** - Facilitators can create cohorts and assign participants to groups
- **Cohort viewing** - Organize participant lists by cohort for better management

## Technical Implementation

### Database Schema Updates
Extend existing user table or create related tables:
```sql
-- Add to existing users table or create profiles table
job_title VARCHAR(255)
company VARCHAR(255) 
profile_picture_url VARCHAR(500)
profile_completed BOOLEAN DEFAULT FALSE
facilitator_id INTEGER (for participant assignment)
cohort_id INTEGER (for cohort grouping)
updated_at TIMESTAMP

-- New cohorts table
CREATE TABLE cohorts (
  id INTEGER PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  facilitator_id INTEGER NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
```

### API Endpoints
Add REST endpoints to existing API:
- `PUT /api/users/:id/profile` - Update user profile
- `GET /api/users/:id/profile` - Get user profile
- `POST /api/users/:id/avatar` - Upload profile picture
- `GET /api/users/profiles` - Get profiles for star card display (with appropriate permissions)
- `POST /api/cohorts` - Create new cohort (facilitators)
- `GET /api/cohorts/:facilitatorId` - Get cohorts for a facilitator
- `PUT /api/users/:id/cohort` - Assign participant to cohort

### Frontend Components
- **ProfileForm component** - Reusable profile editing form
- **AvatarUpload component** - Handle image upload and preview
- **Enhanced StarCard component** - Display complete profile info
- **ProfileManager component** - Admin/facilitator interface for managing participant profiles
- **CohortManager component** - Create and manage cohorts
- **CohortView component** - Display participants organized by cohort
- **CohortSelector component** - Assign participants to cohorts

### Security & Validation
- **File upload validation** (image types, 2MB limit)
- **Role-based access control** using existing authentication
- **Input sanitization** for text fields
- **Session management** using existing system

## Integration Points

### Star Card Updates
Modify existing star card components to:
- Pull job title and company from user profiles
- Display profile pictures with fallback to default avatar
- Maintain existing card layout and styling
- Show appropriate information based on user permissions

### Profile Completion Flow
- **Profile completion tracking** to encourage users to fill out all fields
- **Optional profile setup** during onboarding or first login
- **Progress indicators** for incomplete profiles

## Implementation Notes

- Work with existing React/TypeScript architecture
- Use existing database schema and extend as needed
- Integrate with current authentication and session management
- Maintain existing UI/UX patterns and styling
- Ensure mobile responsiveness matches current design
- Add proper TypeScript types for new profile fields

**GOAL**: Seamlessly enhance the existing allstarteams workshop app with rich user profiles that display beautifully on star cards without disrupting current functionality.