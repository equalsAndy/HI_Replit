# Replit Agent Implementation Prompt: HI Holistic Development Report Generator

## **Objective**
Build a comprehensive report generation system for AllStarTeams workshop participants that creates downloadable PDF reports from their assessment data using the established 10-section "HI Holistic Development Report" format.

## **Technical Requirements**

### **1. Create New API Endpoint**
```
POST /api/generate-report
GET /api/download-report/:userId
```

**File Location:** `server/routes/report-routes.ts`

### **2. Database Integration**
Use existing schema to extract data from:
- `users` table (userInfo)
- `userAssessments` table (all assessmentType entries)

**Assessment Types to Query:**
- `'starCard'` → Star Strengths percentages
- `'stepByStepReflection'` → Strength reflections  
- `'flowAssessment'` → Flow scores and responses
- `'flowAttributes'` → 4 selected flow descriptor words
- `'roundingOutReflection'` → Growth and values responses
- `'cantrilLadder'` → Well-being ladder ratings and reflections
- `'visualizingPotential'` → Vision images and meaning
- `'futureSelfReflection'` → Future aspirations
- `'finalReflection'` → Personal letter/commitment

### **3. Report Generation Logic**

**Data Extraction Function:**
```javascript
async function extractReportData(userId) {
  // Get user info
  const user = await getUserById(userId);
  
  // Get all assessments for user
  const assessments = await getUserAssessments(userId);
  
  // Transform into report data structure
  return {
    userInfo: {
      name: user.name,
      email: user.email,
      organization: user.organization,
      jobTitle: user.jobTitle
    },
    assessments: {
      starCard: findAssessment(assessments, 'starCard'),
      stepByStepReflection: findAssessment(assessments, 'stepByStepReflection'),
      flowAssessment: findAssessment(assessments, 'flowAssessment'),
      flowAttributes: findAssessment(assessments, 'flowAttributes'),
      roundingOutReflection: findAssessment(assessments, 'roundingOutReflection'),
      cantrilLadder: findAssessment(assessments, 'cantrilLadder'),
      visualizingPotential: findAssessment(assessments, 'visualizingPotential'),
      futureSelfReflection: findAssessment(assessments, 'futureSelfReflection'),
      finalReflection: findAssessment(assessments, 'finalReflection')
    }
  };
}

function findAssessment(assessments, type) {
  const assessment = assessments.find(a => a.assessmentType === type);
  return assessment ? JSON.parse(assessment.results) : null;
}
```

## **4. HTML Report Generation - 10 Section Structure**

### **Main Report Generator:**
```javascript
function generateHIReport(data, reportType = 'DETAILED') {
  return `
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <title>HI Holistic Development Report - ${data.userInfo.name}</title>
      <style>${getReportCSS()}</style>
    </head>
    <body>
      <div class="report-container">
        ${generateHeader(data.userInfo)}
        ${generateExecutiveSummary(data)}
        ${generateCoreStrengthsProfile(data)}
        ${generateFlowOptimization(data)}
        ${generateWellbeingSection(data)}
        ${generateFutureVisionSection(data)}
        ${generateStrengthsConstraintsSection(data)}
        ${generateTeamSynergySection(data)}
        ${generateReflectionNextSteps(data)}
        ${generateAIRecommendations(data)}
        ${generateAppendices(data)}
        ${generateFooter()}
      </div>
    </body>
    </html>
  `;
}
```

### **Section 1: Header**
```javascript
function generateHeader(userInfo) {
  return `
    <header class="report-header">
      <h1>HI Holistic Development Report: ${userInfo.name}</h1>
      <p class="participant-info">${userInfo.name} • ${userInfo.jobTitle} • ${userInfo.organization}</p>
      <p class="report-date">Generated on ${new Date().toLocaleDateString()}</p>
    </header>
  `;
}
```

### **Section 2: Executive Summary**
```javascript
function generateExecutiveSummary(data) {
  const starCard = data.assessments.starCard || {};
  const flowScore = data.assessments.flowAssessment?.flowScore || 0;
  const wellbeing = data.assessments.cantrilLadder || {};
  
  // Analyze strength pattern
  const strengthPattern = analyzeStrengthPattern(starCard);
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Executive Summary</h2>
        <p class="section-subtitle">Your AllStarTeams workshop journey synthesis</p>
      </div>
      <div class="executive-summary">
        <p>${data.userInfo.name} represents the ${strengthPattern.archetype} pattern, 
           with ${strengthPattern.primary} (${strengthPattern.primaryPercent}%) as the leading strength 
           and ${strengthPattern.secondary} (${strengthPattern.secondaryPercent}%) as strong secondary. 
           This combination accounts for ${strengthPattern.primaryPercent + strengthPattern.secondaryPercent}% 
           of their natural approach, creating a clear pattern for team contribution and personal effectiveness.</p>
        
        <p>With a flow capacity score of ${flowScore}/60 and current well-being at ${wellbeing.wellBeingLevel || 'N/A'}/10, 
           ${data.userInfo.name} demonstrates ${interpretFlowScore(flowScore)} and shows strong self-awareness 
           about their optimal performance conditions. Their future vision centers on leveraging this natural 
           ${strengthPattern.primary}-${strengthPattern.secondary} pattern for greater impact.</p>
      </div>
    </section>
  `;
}
```

### **Section 3: Core Strengths Profile**
```javascript
function generateCoreStrengthsProfile(data) {
  const starCard = data.assessments.starCard || {};
  const reflections = data.assessments.stepByStepReflection || {};
  
  // Sort strengths by percentage
  const sortedStrengths = sortStrengthsByPercentage(starCard);
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Core Strengths Profile</h2>
        <p class="section-subtitle">Understanding your natural approach and team contribution patterns</p>
      </div>
      
      <!-- Star Card Visual -->
      <div class="star-card-container">
        <img src="/api/star-card-image/${data.userInfo.id}" 
             alt="${data.userInfo.name}'s Star Card" 
             class="star-card-image"
             onerror="this.style.display='none'"/>
        <p style="margin-top: 15px; color: #666; font-size: 10pt;">Your unique strengths constellation</p>
        <p style="margin-top: 10px; color: #7f8c8d; font-size: 9pt; font-style: italic;">
          Note: Understanding this pattern helps you recognize how you naturally contribute to teams.
        </p>
      </div>
      
      <!-- Strengths Breakdown -->
      <div class="strengths-breakdown">
        ${sortedStrengths.map(strength => `
          <div class="strength-item">
            <div class="strength-name">${strength.name}</div>
            <div class="strength-percentage">${strength.percentage}%</div>
            <div class="strength-bar">
              <div class="strength-fill" style="width: ${strength.percentage}%;"></div>
            </div>
            <div class="strength-rank">${getStrengthLabel(strength.percentage)}</div>
          </div>
        `).join('')}
      </div>
      
      <!-- Key Reflections -->
      ${generateStrengthReflections(reflections, sortedStrengths)}
    </section>
  `;
}
```

### **Section 4: Flow Optimization**
```javascript
function generateFlowOptimization(data) {
  const flowAssessment = data.assessments.flowAssessment || {};
  const flowAttributes = data.assessments.flowAttributes?.attributes || [];
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Flow Optimization</h2>
        <p class="section-subtitle">Your peak performance patterns and triggers</p>
      </div>
      
      <!-- Flow Score -->
      <div class="flow-score">
        <div class="flow-score-number">${flowAssessment.flowScore || 0}</div>
        <div class="flow-score-label">out of 60 • ${interpretFlowScore(flowAssessment.flowScore)}</div>
      </div>
      
      <!-- Flow Attributes -->
      <div class="flow-attributes">
        ${flowAttributes.map(attr => `
          <div class="flow-attribute">
            <div class="attribute-name">${attr.name || attr}</div>
            <div class="attribute-description">Selected Flow Descriptor</div>
          </div>
        `).join('')}
      </div>
      
      <!-- AI Flow Enhancement Suggestions -->
      ${generateFlowSuggestions(data)}
    </section>
  `;
}
```

### **Section 5: Well-being & Self-Care**
```javascript
function generateWellbeingSection(data) {
  const cantril = data.assessments.cantrilLadder || {};
  const rounding = data.assessments.roundingOutReflection || {};
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Well-being & Self-Care</h2>
        <p class="section-subtitle">Your current foundation and sustainability practices</p>
      </div>
      
      <!-- Well-being Display -->
      <div class="wellbeing-display">
        <div class="wellbeing-current">
          <div class="wellbeing-number">${cantril.wellBeingLevel || 'N/A'}</div>
          <div class="wellbeing-label">Current Well-being</div>
        </div>
        <div class="wellbeing-arrow">→</div>
        <div class="wellbeing-future">
          <div class="wellbeing-number">${cantril.futureWellBeingLevel || 'N/A'}</div>
          <div class="wellbeing-label">Future Vision</div>
        </div>
      </div>
      
      ${cantril.currentFactors ? `
        <div class="highlight-box">
          <div class="highlight-title">What's Supporting Your Well-being</div>
          <div class="highlight-content">"${cantril.currentFactors}"</div>
        </div>
      ` : ''}
      
      ${cantril.futureImprovements ? `
        <div class="highlight-box">
          <div class="highlight-title">Your Growth Vision</div>
          <div class="highlight-content">"${cantril.futureImprovements}"</div>
        </div>
      ` : ''}
      
      <!-- AI Tips for Sustaining Performance -->
      ${generateWellbeingTips(data)}
    </section>
  `;
}
```

### **Section 6: Future Vision & Growth Plan**
```javascript
function generateFutureVisionSection(data) {
  const future = data.assessments.futureSelfReflection || {};
  const visual = data.assessments.visualizingPotential || {};
  const cantril = data.assessments.cantrilLadder || {};
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Future Vision & Growth Plan</h2>
        <p class="section-subtitle">Your pathway forward and long-term impact goals</p>
      </div>
      
      ${future.futureSelfDescription ? `
        <div class="quote">
          "${future.futureSelfDescription}"
        </div>
      ` : ''}
      
      ${visual.imageMeaning ? `
        <div class="highlight-box">
          <div class="highlight-title">Your Vision Symbols</div>
          <div class="highlight-content">"${visual.imageMeaning}"</div>
        </div>
      ` : ''}
      
      ${cantril.quarterlyActions ? `
        <div class="action-list">
          <h4>Your Quarterly Action Plan</h4>
          <div class="highlight-content">"${cantril.quarterlyActions}"</div>
        </div>
      ` : ''}
      
      <!-- AI Action Plan -->
      ${generateFutureActionPlan(data)}
    </section>
  `;
}
```

### **Section 7: Strengths, Constraints & Development Opportunities**
```javascript
function generateStrengthsConstraintsSection(data) {
  const starCard = data.assessments.starCard || {};
  const rounding = data.assessments.roundingOutReflection || {};
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Strengths, Constraints & Development Opportunities</h2>
        <p class="section-subtitle">Leveraging your natural patterns for maximum impact</p>
      </div>
      
      <!-- Strength Leverage -->
      <div class="highlight-box">
        <div class="highlight-title">Maximizing Your Primary Pattern</div>
        <div class="highlight-content">${generateStrengthLeverageInsight(starCard)}</div>
      </div>
      
      <!-- Natural Constraints (not deficits) -->
      <div class="highlight-box">
        <div class="highlight-title">When to Partner with Others</div>
        <div class="highlight-content">${generatePartnershipInsight(starCard)}</div>
      </div>
      
      ${rounding.growthAreas ? `
        <div class="highlight-box">
          <div class="highlight-title">Your Development Edge</div>
          <div class="highlight-content">"${rounding.growthAreas}"</div>
        </div>
      ` : ''}
      
      <!-- AI Development Strategies -->
      ${generateDevelopmentStrategies(data)}
    </section>
  `;
}
```

### **Section 8: Team Synergy & Complementary Strengths**
```javascript
function generateTeamSynergySection(data) {
  const starCard = data.assessments.starCard || {};
  const reflections = data.assessments.stepByStepReflection || {};
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Team Synergy & Complementary Strengths</h2>
        <p class="section-subtitle">How your pattern complements others for maximum team effectiveness</p>
      </div>
      
      <div class="highlight-box">
        <div class="highlight-title">You Work Best With</div>
        <div class="highlight-content">${generateComplementaryPartners(starCard)}</div>
      </div>
      
      ${reflections.uniqueContribution ? `
        <div class="highlight-box">
          <div class="highlight-title">Your Natural Team Contribution</div>
          <div class="highlight-content">"${reflections.uniqueContribution}"</div>
        </div>
      ` : ''}
      
      ${reflections.teamValues ? `
        <div class="highlight-box">
          <div class="highlight-title">Your Team Environment Values</div>
          <div class="highlight-content">"${reflections.teamValues}"</div>
        </div>
      ` : ''}
      
      <div class="action-list">
        <h4>Creating Effective Team Dynamics</h4>
        <ul>
          ${generateTeamDynamicsTips(starCard).map(tip => `<li>${tip}</li>`).join('')}
        </ul>
      </div>
    </section>
  `;
}
```

### **Section 9: Reflection & Next Steps**
```javascript
function generateReflectionNextSteps(data) {
  const final = data.assessments.finalReflection || {};
  const cantril = data.assessments.cantrilLadder || {};
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Reflection & Next Steps</h2>
        <p class="section-subtitle">Your workshop insights and developmental intentions</p>
      </div>
      
      ${final.futureLetterText ? `
        <div class="quote">
          "${final.futureLetterText}"
        </div>
      ` : ''}
      
      ${cantril.specificChanges ? `
        <div class="highlight-box">
          <div class="highlight-title">Your Commitment to Change</div>
          <div class="highlight-content">"${cantril.specificChanges}"</div>
        </div>
      ` : ''}
      
      <!-- Personal Appreciations -->
      <div class="executive-summary">
        <p><strong>Personal Appreciation:</strong> ${generatePersonalAppreciation(data)}</p>
        <p><strong>Integration Plan:</strong> ${generateIntegrationPlan(data)}</p>
      </div>
    </section>
  `;
}
```

### **Section 10: AI-Powered Forward-Looking Recommendations**
```javascript
function generateAIRecommendations(data) {
  const recommendations = [
    generateStrengthMaximizationRec(data),
    generateTeamIntegrationRec(data),
    generateGrowthEdgeRec(data)
  ];
  
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">AI-Powered Forward-Looking Recommendations</h2>
        <p class="section-subtitle">Three personalized strategies for maximum impact</p>
      </div>
      
      ${recommendations.map((rec, index) => `
        <div class="recommendation">
          <h3>Recommendation ${index + 1}: ${rec.title}</h3>
          <div class="rec-why"><strong>Why:</strong> ${rec.why}</div>
          <div class="rec-what"><strong>What:</strong> ${rec.what}</div>
          <div class="rec-how"><strong>How:</strong> ${rec.how}</div>
        </div>
      `).join('')}
    </section>
  `;
}
```

### **Section 11: Appendices**
```javascript
function generateAppendices(data) {
  return `
    <section class="section">
      <div class="section-header">
        <h2 class="section-title">Appendices</h2>
        <p class="section-subtitle">Supporting documents and assessment summary</p>
      </div>
      
      <!-- Assessment Summary -->
      <div class="appendix-section">
        <h4>Assessment Summary</h4>
        <ul>
          <li>Star Card: ${formatStarCardSummary(data.assessments.starCard)}</li>
          <li>Flow Assessment: ${data.assessments.flowAssessment?.flowScore || 'N/A'}/60</li>
          <li>Well-being Ladder: ${data.assessments.cantrilLadder?.wellBeingLevel || 'N/A'}/10</li>
          <li>Flow Attributes: ${formatFlowAttributes(data.assessments.flowAttributes)}</li>
        </ul>
      </div>
      
      <!-- Key Reflection Quotes -->
      <div class="appendix-section">
        <h4>Key Reflection Insights</h4>
        ${generateKeyQuotes(data)}
      </div>
    </section>
  `;
}
```

## **5. Helper Functions for AI Analysis**

### **Strength Pattern Analysis:**
```javascript
function analyzeStrengthPattern(starCard) {
  const strengths = [
    { name: 'Thinking', value: starCard.thinking || 0 },
    { name: 'Feeling', value: starCard.feeling || 0 },
    { name: 'Acting', value: starCard.acting || 0 },
    { name: 'Planning', value: starCard.planning || 0 }
  ].sort((a, b) => b.value - a.value);
  
  const primary = strengths[0];
  const secondary = strengths[1];
  
  return {
    primary: primary.name,
    primaryPercent: primary.value,
    secondary: secondary.name,
    secondaryPercent: secondary.value,
    archetype: determineArchetype(primary.name, secondary.name)
  };
}

function determineArchetype(primary, secondary) {
  const combinations = {
    'Thinking-Feeling': 'thoughtful innovator',
    'Thinking-Planning': 'strategic analyst', 
    'Thinking-Acting': 'decisive problem-solver',
    'Feeling-Planning': 'empathetic organizer',
    'Feeling-Acting': 'people-focused catalyst',
    'Planning-Acting': 'structured achiever',
    'Feeling-Thinking': 'empathetic analyst',
    'Planning-Thinking': 'systematic strategist',
    'Acting-Thinking': 'action-oriented analyst',
    'Planning-Feeling': 'caring organizer',
    'Acting-Feeling': 'dynamic connector',
    'Acting-Planning': 'execution specialist'
  };
  
  return combinations[`${primary}-${secondary}`] || 'balanced contributor';
}

function sortStrengthsByPercentage(starCard) {
  return [
    { name: 'Thinking', percentage: starCard.thinking || 0 },
    { name: 'Feeling', percentage: starCard.feeling || 0 },
    { name: 'Acting', percentage: starCard.acting || 0 },
    { name: 'Planning', percentage: starCard.planning || 0 }
  ].sort((a, b) => b.percentage - a.percentage);
}

function getStrengthLabel(percentage) {
  if (percentage >= 30) return 'Primary Strength';
  if (percentage >= 25) return 'Secondary Strength';
  if (percentage >= 20) return 'Supporting Approach';
  return 'Balancing Approach';
}

function interpretFlowScore(score) {
  if (score >= 50) return 'High Flow Capacity';
  if (score >= 40) return 'Strong Flow Potential';
  if (score >= 30) return 'Developing Flow Skills';
  return 'Flow Growth Opportunity';
}
```

### **AI Recommendation Generators:**
```javascript
function generateStrengthMaximizationRec(data) {
  const pattern = analyzeStrengthPattern(data.assessments.starCard || {});
  
  return {
    title: 'Strength Maximization',
    why: `Your ${pattern.primary}-${pattern.secondary} combination (${pattern.primaryPercent + pattern.secondaryPercent}% of your approach) creates unique value in how you approach challenges and opportunities.`,
    what: `Focus on projects and roles that allow you to lead with ${pattern.primary.toLowerCase()} while incorporating ${pattern.secondary.toLowerCase()} for maximum impact.`,
    how: `Seek assignments where you can utilize both strengths simultaneously, advocate for approaches that leverage your natural pattern, and communicate your value in terms of this unique combination.`
  };
}

function generateTeamIntegrationRec(data) {
  const starCard = data.assessments.starCard || {};
  const partners = generateComplementaryPartners(starCard);
  
  return {
    title: 'Team Integration',
    why: `Your natural approach pattern works best when complemented by others who lead with different strengths, creating a complete team capability.`,
    what: `Actively seek collaboration with ${partners} to create synergistic team dynamics.`,
    how: `Identify team members with complementary patterns, propose partnership approaches for complex projects, and help your team understand how different strength patterns create collective success.`
  };
}

function generateGrowthEdgeRec(data) {
  const cantril = data.assessments.cantrilLadder || {};
  const rounding = data.assessments.roundingOutReflection || {};
  
  return {
    title: 'Growth Edge Exploration',
    why: `Your development opportunities build on your existing strengths rather than fixing weaknesses, creating sustainable growth aligned with your natural patterns.`,
    what: `Focus on ${cantril.specificChanges || 'developing skills that enhance your primary strength combination'}.`,
    how: `Take on stretch assignments that require your natural strengths plus new capabilities, seek mentoring in areas that complement your pattern, and practice integrating new skills with your existing approach.`
  };
}

function generateComplementaryPartners(starCard) {
  const pattern = analyzeStrengthPattern(starCard);
  const primary = pattern.primary;
  const secondary = pattern.secondary;
  
  // Determine what strengths would complement this pattern
  const allStrengths = ['Thinking', 'Feeling', 'Acting', 'Planning'];
  const currentStrengths = [primary, secondary];
  const complementaryStrengths = allStrengths.filter(s => !currentStrengths.includes(s));
  
  return `colleagues who naturally lead with ${complementaryStrengths.join(' or ')} strengths`;
}
```

## **6. CSS Styling (PDF-Optimized)**

```javascript
function getReportCSS() {
  return `
    @page {
      margin: 0.75in;
      size: letter;
    }
    
    * {
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
      line-height: 1.6;
      color: #2c3e50;
      margin: 0;
      padding: 0;
      background: white;
      font-size: 11pt;
    }
    
    .report-container {
      max-width: 8.5in;
      margin: 0 auto;
      background: white;
    }
    
    .report-header {
      background: linear-gradient(135deg, #2c5aa0 0%, #1e3d6f 100%);
      color: white;
      padding: 30px 40px;
      text-align: center;
      margin-bottom: 0;
    }
    
    .report-header h1 {
      font-size: 24pt;
      font-weight: 700;
      margin: 0 0 10px 0;
      letter-spacing: -0.5px;
    }
    
    .participant-info {
      font-size: 14pt;
      opacity: 0.95;
      margin: 0;
    }
    
    .report-date {
      font-size: 10pt;
      opacity: 0.8;
      margin: 15px 0 0 0;
    }
    
    .section {
      margin: 30px 0;
      page-break-inside: avoid;
      padding: 0 40px;
    }
    
    .section-header {
      border-bottom: 3px solid #2c5aa0;
      padding-bottom: 8px;
      margin-bottom: 20px;
    }
    
    .section-title {
      font-size: 18pt;
      font-weight: 600;
      color: #2c5aa0;
      margin: 0;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .section-subtitle {
      font-size: 10pt;
      color: #7f8c8d;
      margin: 5px 0 0 0;
      font-style: italic;
    }
    
    .executive-summary {
      background: linear-gradient(to right, #f8f9fa, #e9ecef);
      border-left: 5px solid #2c5aa0;
      padding: 25px;
      margin: 20px 0;
      border-radius: 0 8px 8px 0;
      font-size: 12pt;
      line-height: 1.7;
    }
    
    .star-card-container {
      text-align: center;
      margin: 30px 0;
      padding: 20px;
      background: #f8f9fa;
      border-radius: 8px;
    }
    
    .star-card-image {
      max-width: 300px;
      height: auto;
      margin: 0 auto 20px auto;
      display: block;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    
    .strengths-breakdown {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin: 25px 0;
    }
    
    .strength-item {
      background: white;
      border: 1px solid #e9ecef;
      border-radius: 8px;
      padding: 20px;
      text-align: center;
      box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }
    
    .strength-name {
      font-size: 14pt;
      font-weight: 600;
      color: #2c5aa0;
      margin-bottom: 10px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .strength-percentage {
      font-size: 24pt;
      font-weight: 700;
      color: #27ae60;
      margin-bottom: 8px;
    }
    
    .strength-bar {
      width: 100%;
      height: 8px;
      background: #ecf0f1;
      border-radius: 4px;
      overflow: hidden;
      margin-bottom: 10px;
    }
    
    .strength-fill {
      height: 100%;
      background: linear-gradient(90deg, #2c5aa0, #3498db);
      border-radius: 4px;
    }
    
    .strength-rank {
      font-size: 9pt;
      color: #7f8c8d;
      font-style: italic;
    }
    
    .flow-score {
      text-align: center;
      background: #e8f4fd;
      border: 2px solid #2c5aa0;
      border-radius: 12px;
      padding: 20px;
      margin: 20px 0;
    }
    
    .flow-score-number {
      font-size: 36pt;
      font-weight: 700;
      color: #2c5aa0;
      margin: 0;
    }
    
    .flow-score-label {
      font-size: 12pt;
      color: #34495e;
      margin: 5px 0 0 0;
    }
    
    .flow-attributes {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
      gap: 15px;
      margin: 20px 0;
    }
    
    .flow-attribute {
      background: #fff;
      border: 2px solid #2c5aa0;
      border-radius: 8px;