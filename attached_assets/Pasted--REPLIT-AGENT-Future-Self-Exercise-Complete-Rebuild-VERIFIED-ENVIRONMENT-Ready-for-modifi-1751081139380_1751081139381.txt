# REPLIT AGENT: Future Self Exercise - Complete Rebuild

## ‚úÖ VERIFIED ENVIRONMENT: Ready for modifications

## üéØ OBJECTIVE: Replace existing Future Self exercise (step 4-4) with new interactive timeline design

## üìÇ MODIFY EXACTLY 2 FILES:
- File 1: `client/src/components/content/FutureSelfView.tsx` - Complete rebuild with new design
- File 2: Database schema update for new field structure (if needed via API)

## ‚ö†Ô∏è CRITICAL CONSTRAINTS:
- ‚ùå DO NOT modify other AllStarTeams components
- ‚ùå DO NOT change navigation or step progression logic
- ‚úÖ ONLY update the Future Self content and data structure
- ‚úÖ MAINTAIN existing auto-save functionality
- ‚úÖ PRESERVE existing props interface compatibility

## üé® VISUAL ASSETS:

### **Timeline Graphic Reference:**
- **Image file:** `/future_self_image.png` (available in public folder)
- **Use as design reference** for creating the 3-circle timeline graphic
- **Implement as CSS/React components** rather than using image directly
- **Maintain visual consistency** with the brown circular design and connecting lines
- **Add interactivity** that the static image cannot provide

## üé® NEW DESIGN REQUIREMENTS:

### **Layout Structure:**
- **Full-width design** - Remove sidebar, use entire page width
- **Video section** - Keep existing VideoPlayer component with step 4-4 video content
- **Reflection areas span full page** - Maximum writing space for better UX
- **Responsive timeline graphic** - Visual representation of 3-circle progression
- **Direction choice affects entire interface** - Different layouts for backward vs forward planning

### **Interactive Direction Toggle:**
```
Step 1: Choose Your Direction
[ Start with 20 Years ] [ Start with 5 Years ]
(Bold vision approach)   (Present momentum)
```

### **Timeline Animation Requirements:**
- **Smooth reordering** when direction changes (20‚Üí10‚Üí5 vs 5‚Üí10‚Üí20)
- **Staggered entrance** animations for timeline reflection cards
- **Visual feedback** on direction choice with highlighted starting circle
- **Use Framer Motion** or React Transition Group for smooth animations
- **Accessibility support** - respect `prefers-reduced-motion`

### **Timeline Graphic (from uploaded image):**
- **3 connected circles** representing 20, 10, 5 years
- **Visual connectors** between circles
- **Active state highlighting** based on chosen direction
- **Responsive scaling** for mobile devices
- **Direction indicator** (‚Üì for backward, ‚Üë for forward)
- **Reference image available** at `/future_self_image.png` in public folder

## üìù CONTENT STRUCTURE:

### **Page Header:**
```
Your Future Self Journey

Purpose:
This exercise helps you imagine who you want to become‚Äîand how to shape a life that supports that becoming.

Use your Flow Assessment insights to guide your vision. You can start by looking 20 years ahead and work backward, or begin with who you are today and look forward.

There's no right way‚Äîonly your way.
```

### **Step 1: Direction Choice**
```
Step 1: Choose Your Direction

Everyone imagines differently. Some start with a bold vision and trace it back. Others build step by step from the present.

There's no right way‚Äîonly your way.
```

### **Timeline Questions (Backward Planning 20‚Üí10‚Üí5):**
1. **20 Years:** "What is the masterpiece of your life?"
2. **10 Years:** "What level of mastery or influence must you have reached by now to be on track?"
3. **5 Years:** "What capacities or conditions need to be actively developing now?"

### **Timeline Questions (Forward Planning 5‚Üí10‚Üí20):**
1. **5 Years:** "What capacities or conditions need to be actively developing now?"
2. **10 Years:** "What level of mastery or influence must you have reached by now to be on track?"
3. **20 Years:** "What is the masterpiece of your life?"

### **Flow Bridge Section:**
```
Step 3: Bridge to Flow

You've identified the conditions where you experience deep focus, energy, and ease.

What would your life look like if it were designed to support those states more often?

Use this as a launch point for your Future Self. Let flow guide your imagination.
```

## üíæ DATABASE STRUCTURE:

### **New API Endpoint: `/api/workshop-data/future-self`**
```typescript
interface FutureSelfData {
  direction: 'backward' | 'forward';        // NEW: Planning direction
  twentyYearVision: string;                 // 20-year reflection
  tenYearMilestone: string;                 // 10-year reflection  
  fiveYearFoundation: string;               // 5-year reflection
  flowOptimizedLife: string;                // Flow bridge reflection
  completedAt?: Date;                       // Completion timestamp
}
```

### **Legacy Field Mapping:**
- Map existing `futureSelfDescription` to appropriate new field
- Map existing `visualizationNotes` to `flowOptimizedLife` 
- Map existing `additionalNotes` to appropriate reflection field

## üéØ COMPONENT REQUIREMENTS:

### **Demo Data Integration:**
- **Subtle demo button** in top-right corner of main content area
- **Fills all 4 reflection areas** with contextually appropriate sample data
- **Different demo content** based on selected direction (backward vs forward)
- **Minimal styling** - small gray button, says "Demo"

### **Auto-save Functionality:**
- **Debounced saving** (1 second delay after typing stops)
- **Save status indicator** - "Saving..." ‚Üí "Saved"
- **Preserve existing save/load pattern** from current implementation

### **Form Validation:**
- **Minimum content requirement** - at least one reflection with 10+ characters
- **Next button state** - disabled until minimum content met
- **Visual feedback** - button styling changes based on completion state

### **Animation Implementation:**
```typescript
// Use Framer Motion for smooth transitions
import { motion, AnimatePresence } from 'framer-motion';

// Timeline reordering animation
const timelineVariants = {
  hidden: { opacity: 0, y: 50 },
  visible: { opacity: 1, y: 0 },
  exit: { opacity: 0, y: -50 }
};

// Staggered entrance for reflection cards
const containerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: { staggerChildren: 0.2 }
  }
};
```

## üé® STYLING REQUIREMENTS:

### **Full-Width Layout:**
- **No sidebar** - utilize entire page width
- **Reflection textareas** span full content width (max-width: none)
- **Timeline graphic** centered above reflection areas
- **Responsive grid** for timeline cards on larger screens

### **Styling Notes:**
- **Color scheme inspiration** from `/future_self_image.png` - brown circles with connecting lines
- **Interactive enhancements** - hover effects, active states, direction indicators
- **Maintain visual hierarchy** - starting circle gets special highlighting
- **Responsive adaptation** - circles scale down gracefully on mobile devices

### **Typography & Spacing:**
- **Large reflection areas** - minimum 120px height, expandable
- **Clear section separation** with appropriate margins
- **Readable font sizes** - 16px for textareas, 18px for prompts
- **Mobile optimization** - stack timeline cards vertically on small screens

## üîß TECHNICAL IMPLEMENTATION:

### **State Management:**
```typescript
interface FutureSelfState {
  direction: 'backward' | 'forward';
  twentyYearVision: string;
  tenYearMilestone: string; 
  fiveYearFoundation: string;
  flowOptimizedLife: string;
  isLoading: boolean;
  saveStatus: 'saved' | 'saving' | 'error';
}
```

### **Animation Strategy:**
1. **Direction Toggle** - Smooth transition between backward/forward layouts
2. **Timeline Reordering** - Cards animate to new positions when direction changes
3. **Visual Feedback** - Highlighted circles and direction indicators
4. **Responsive Behavior** - Animations scale appropriately on mobile

### **Integration Points:**
- **Maintain existing prop interface** - `markStepCompleted`, `setCurrentContent`, etc.
- **Video player integration** - Use existing VideoPlayer component for step 4-4 video content
- **Progress tracking** - Ensure step 4-4 completion logic remains intact
- **Universal video component** - Keep existing video implementation, same video content

## üì± RESPONSIVE DESIGN:

### **Desktop (1200px+):**
- **Timeline graphic** prominently displayed above reflection grid
- **2-column reflection layout** where appropriate
- **Full animation effects** active

### **Tablet (768px-1199px):**
- **Single-column reflections** for better readability
- **Scaled timeline graphic** maintains proportions
- **Reduced animation complexity** for performance

### **Mobile (< 768px):**
- **Stacked timeline cards** with simplified graphic
- **Full-width textareas** for maximum writing space
- **Touch-optimized controls** with larger touch targets

## üìã VERIFICATION CHECKLIST:

### **Functionality:**
- [ ] Direction toggle changes interface layout and question order
- [ ] All 4 reflection areas auto-save with debouncing
- [ ] Demo button fills appropriate content based on direction
- [ ] Next button properly validates minimum content
- [ ] Timeline graphic responds to direction choice
- [ ] VideoPlayer component works with step 4-4 content (same video as current)

### **Animations:**
- [ ] Smooth transitions when changing direction
- [ ] Staggered entrance for timeline reflection cards
- [ ] Visual feedback on direction selection
- [ ] Respects user's motion preferences

### **Integration:**
- [ ] Maintains existing AllStarTeams navigation flow
- [ ] Step 4-4 completion triggers progression to step 4-5
- [ ] Data persists across browser sessions
- [ ] Works with existing user authentication

### **Responsive Design:**
- [ ] Full-width reflections maximize writing space
- [ ] Timeline graphic scales appropriately across devices
- [ ] Touch interactions work smoothly on mobile
- [ ] Layout remains usable at all screen sizes

## üöÄ IMPLEMENTATION STRATEGY:

1. **Create new component structure** with full-width layout
2. **Implement direction toggle** with state management
3. **Build timeline graphic** with interactive circles and connectors
4. **Add reflection areas** with full-page spanning design
5. **Integrate animations** using Framer Motion
6. **Connect to updated API endpoint** for new data structure
7. **Test responsive behavior** across all device sizes
8. **Verify AllStarTeams integration** maintains existing flow

## üí° CREATIVE FREEDOM:

The agent should feel free to:
- **Enhance animations** beyond basic requirements for better UX
- **Optimize performance** with smart re-rendering strategies  
- **Improve accessibility** with ARIA labels and keyboard navigation
- **Add subtle micro-interactions** that enhance the planning experience

The goal is a polished, interactive Future Self exercise that feels significantly more engaging than the current implementation while maintaining full compatibility with the existing AllStarTeams workshop flow.

**EXECUTE COMPLETE FUTURE SELF EXERCISE REBUILD WITH FULL-WIDTH REFLECTIONS AND INTERACTIVE TIMELINE.**