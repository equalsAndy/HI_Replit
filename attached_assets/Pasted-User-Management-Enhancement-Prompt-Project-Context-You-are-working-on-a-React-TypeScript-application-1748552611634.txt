User Management Enhancement Prompt
Project Context
You are working on a React/TypeScript application with a Node.js/Express backend that manages workshop users. The application has an existing user management system that needs improvements to the table layout and action button visibility.

Current Issue
The user management table has too many columns causing the action buttons (Edit, Delete Data, Delete User) to be pushed off-screen or not properly visible. The Organization column has been hidden, but the table still needs better horizontal scrolling and layout optimization.

Files to Modify (ONLY THESE FILES):
client/src/components/admin/UserManagement.tsx - Main user management component
client/src/components/ui/table.tsx - Table UI component (if needed for styling improvements)
DO NOT TOUCH these files:
Any server-side files in /server/ directory
Database schema files (shared/schema.ts)
Any routing files
Authentication files
Any other UI components not explicitly listed
Package.json, vite.config.ts, or any config files
Specific Requirements:
1. Table Layout Improvements
Ensure the table is fully horizontally scrollable
Optimize column widths for better space utilization
Make action buttons always visible and properly sized
Improve responsive design for mobile devices
2. Action Button Enhancements
Ensure "Edit", "Delete Data", and "Delete User" buttons are always visible
Improve button sizing and spacing
Add better visual hierarchy for button actions
Consider making buttons stack vertically on smaller screens
3. Column Optimization
Keep the Organization column hidden as currently implemented
Optimize remaining column widths:
ID: Minimal width needed
User: Adequate space for name and email
Username: Medium width
Role: Compact badge display
Test User: Toggle switch width
Created: Date display width
Status: Badge width
Actions: Sufficient width for all buttons
4. Visual Improvements
Ensure proper spacing between action buttons
Maintain consistent button styling
Ensure table headers align properly with content
Add proper tooltips if buttons become too compact
Current Table Structure (from UserManagement.tsx):
<TableHead className="min-w-[80px]">ID</TableHead>
<TableHead className="min-w-[200px]">User</TableHead>
<TableHead className="min-w-[120px]">Username</TableHead>
<TableHead className="min-w-[100px]">Role</TableHead>
<TableHead className="min-w-[100px]">Test User</TableHead>
<TableHead className="min-w-[120px]">Created</TableHead>
<TableHead className="min-w-[80px]">Status</TableHead>
<TableHead className="min-w-[200px]">Actions</TableHead>
Current Action Buttons Structure:
Edit button (blue outline)
Delete Data button (orange outline)
Delete User button (red outline)
Restore button (for deleted users, blue outline)
Success Criteria:
All action buttons are clearly visible without horizontal scrolling on standard desktop screens
Table remains functional and scrollable on mobile devices
No functionality is broken or removed
Maintains existing styling patterns and color schemes
Preserves all current features (delete confirmations, edit dialogs, etc.)
Technical Constraints:
Use existing Tailwind CSS classes
Maintain existing component structure
Keep all existing functionality intact
Use existing UI components from the /ui folder
Follow the current TypeScript patterns in the codebase
Focus ONLY on layout, spacing, and visibility improvements. Do not modify any business logic, API calls, or data handling functionality.