Admin User Data Export Feature - Agent Prompt (Enhanced with Image URLs)
üéØ GOAL
Add a "Download User Data" feature to the existing Admin User Management page that exports all user data in a readable JSON format, including all reflection inputs, flow assessment data, and image URLs.

üìã REQUIREMENTS
Frontend Changes (UserManagement.tsx)
Add Export Button: Add a new "Download Data" button to each user row in the user management table
Export Functionality: Implement a function to fetch and download user data as a formatted JSON file
Loading States: Show loading indicator during data export
Error Handling: Display appropriate error messages if export fails
Backend Changes (admin-routes.ts)
New API Endpoint: Create GET /api/admin/users/:id/export endpoint
Data Aggregation: Collect all user-related data from multiple tables:
User profile data (from users table)
Star card data (from star_cards table) with image URLs
Flow attributes (from flow_attributes table)
User assessments (from user_assessments table)
Workshop participation (from workshop_participation table)
Navigation progress data with video progress
Profile picture URLs
Data Formatting: Structure the data in a readable, hierarchical JSON format
Security: Ensure only admins can access this endpoint (use existing isAdmin middleware)
Service Layer Updates (user-management-service.ts)
Export Service Method: Add exportUserData(userId: number) method
Data Collection: Query all relevant tables for the user
Data Transformation: Convert database records to readable format
Error Handling: Handle cases where user doesn't exist or has no data
üîß TECHNICAL SPECIFICATIONS
Expected JSON Export Structure (Enhanced with Image URLs):
{
  "userInfo": {
    "id": 15,
    "username": "participant1",
    "name": "Participant One",
    "email": "participant1@example.com",
    "role": "participant",
    "organization": "Client Company A",
    "jobTitle": "Team Member",
    "profilePicture": "https://example.com/uploads/profile_123.jpg",
    "isTestUser": true,
    "createdAt": "2025-05-25T15:02:43.180Z",
    "updatedAt": "2025-06-04T01:06:03.766Z"
  },
  "navigationProgress": {
    "completedSteps": ["1-1", "2-1", "2-2"],
    "currentStepId": "4-5",
    "appType": "ast",
    "lastVisitedAt": "2025-06-04T00:58:28.832Z",
    "unlockedSections": ["1"],
    "videoProgress": {
      "1-1": 2.44,
      "2-1": 20.48
    }
  },
  "starCardData": {
    "thinking": 27,
    "acting": 20,
    "feeling": 27,
    "planning": 26,
    "imageUrl": "https://example.com/uploads/starcard_456.png",
    "state": "completed",
    "createdAt": "2025-06-03T..."
  },
  "flowAttributes": [
    "Creative Problem Solver",
    "Strategic Thinker", 
    "Team Collaborator",
    "Detail Oriented"
  ],
  "reflectionData": {
    "stepByStepReflection": {
      "strength1": "I excel at analytical thinking and problem-solving...",
      "strength2": "My ability to collaborate effectively with diverse teams...",
      "strength3": "I have strong emotional intelligence and empathy...", 
      "strength4": "I am highly organized and detail-oriented...",
      "teamValues": "I perform best in environments that value open communication...",
      "uniqueContribution": "My unique combination of technical skills and emotional intelligence..."
    },
    "cantrilLadderReflection": {
      "currentFactors": "Strong relationships, meaningful work, good health...",
      "futureImprovements": "Better work-life balance, continued learning opportunities...",
      "specificChanges": "I plan to set clearer boundaries between work and personal time...",
      "quarterlyProgress": "In 3 months, I want to have established a consistent exercise routine...",
      "quarterlyActions": "1. Join a gym or fitness program, 2. Schedule weekly check-ins..."
    },
    "roundingOutReflection": {
      "strengths": "My top strengths include strategic thinking, collaboration...",
      "values": "I value integrity, continuous learning, and making a positive impact...",
      "passions": "I'm passionate about technology innovation, team development...",
      "growthAreas": "Areas where I want to grow include public speaking, delegation..."
    },
    "finalReflection": {
      "futureLetterText": "Dear Future Self, as I look ahead to where I want to be..."
    }
  },
  "flowAssessmentData": {
    "flowScore": 0,
    "flowResponses": {
      "question1": "Strongly Agree",
      "question2": "Agree", 
      "question3": "Neutral"
    },
    "flowInsights": "Based on responses, the user shows strong potential for flow states..."
  },
  "assessments": [
    {
      "assessmentType": "starCard",
      "results": {
        "thinking": 27,
        "acting": 20,
        "feeling": 27,
        "planning": 26
      },
      "createdAt": "2025-06-03T..."
    },
    {
      "assessmentType": "stepByStepReflection", 
      "results": {
        "strength1": "Analytical thinking...",
        "teamValues": "Open communication..."
      },
      "createdAt": "2025-06-03T..."
    }
  ],
  "workshopParticipation": [
    {
      "workshopId": 1,
      "progress": "80%",
      "completed": false,
      "startedAt": "2025-06-01T...",
      "lastAccessedAt": "2025-06-04T..."
    }
  ],
  "imageAssets": {
    "profilePicture": "https://example.com/uploads/profile_123.jpg",
    "starCardImage": "https://example.com/uploads/starcard_456.png",
    "uploadedImages": [
      {
        "filename": "user_upload_789.jpg",
        "url": "https://example.com/uploads/user_upload_789.jpg",
        "uploadedAt": "2025-06-02T...",
        "purpose": "star_card_background"
      }
    ]
  },
  "exportMetadata": {
    "exportedAt": "2025-06-04T01:25:00.000Z",
    "exportedBy": "admin",
    "dataVersion": "1.0",
    "includesImageUrls": true
  }
}
Data Sources to Include:
User Profile Data (users table):

Basic profile information
Profile picture URL from profilePicture field
Navigation progress with video timestamps
Star Card Data (star_cards table):

Quadrant scores (thinking, acting, feeling, planning)
Star card image URL from imageUrl field
Creation and completion timestamps
Flow Attributes (flow_attributes table):

Selected flow attributes list
Flow score if available
Reflection Data (user_assessments table):

stepByStepReflection: All 6 reflection responses including team values and unique contribution
cantrilLadderReflection: Well-being ladder reflection responses
roundingOutReflection: Strengths, values, passions, growth areas
finalReflection: Future self letter text
Workshop Participation (workshop_participation table):

Progress tracking
Completion status
Access timestamps
Image Assets:

Profile picture URLs
Star card image URLs
Any uploaded files in /uploads directory associated with the user
Key Reflection Data Fields to Export:
Based on the codebase analysis, ensure these specific reflection inputs are included:

Step-by-Step Reflection:

strength1, strength2, strength3, strength4: Individual strength reflections
teamValues: Team environment reflection
uniqueContribution: Unique contribution reflection
Cantril Ladder Reflection:

currentFactors: Current well-being factors
futureImprovements: Future improvement areas
specificChanges: Specific changes planned
quarterlyProgress: 3-month progress goals
quarterlyActions: Quarterly action items
Rounding Out Reflection:

strengths: Core strengths reflection
values: Personal values reflection
passions: Passion areas reflection
growthAreas: Growth and development areas
Final Reflection:

futureLetterText: Letter to future self
UI Button Placement:
Add the "Download Data" button in the Actions column of the user table
Use a download icon (e.g., Download from Lucide React)
Style consistently with existing action buttons
Position after "Edit" but before "Delete Data"
File Naming Convention:
Format: user-data-{username}-{timestamp}.json
Example: user-data-participant1-2025-06-04-01-25-00.json
üé® UI/UX REQUIREMENTS
Button Style: Use outline variant with blue color scheme to match "Edit" button
Tooltip: Add tooltip explaining "Download all user data including reflections and images as JSON"
Loading State: Show spinner icon and "Exporting..." text during download
Success Feedback: Brief toast notification confirming successful download
File Download: Trigger automatic browser download of the JSON file
üîí SECURITY CONSIDERATIONS
Admin Only: Ensure only users with admin role can export data
User Validation: Verify the target user exists before attempting export
Data Sanitization: Remove sensitive fields like passwords from export
Image URL Security: Ensure image URLs are accessible and properly formatted
Audit Logging: Log export actions for security audit trail
üìù EXISTING PATTERNS TO FOLLOW
Use existing apiRequest utility for API calls
Follow existing error handling patterns with toast notifications
Use existing button styling and spacing conventions
Implement consistent with other admin actions (edit, delete)
Use existing useMutation pattern from React Query
üß™ TESTING REQUIREMENTS
Verify Export Works: Test with users who have complete data including images
Handle Empty Data: Test with users who have minimal/no assessment data
Image URL Testing: Verify image URLs are correctly included and accessible
Permission Check: Verify non-admin users cannot access export endpoint
Error Scenarios: Test with invalid user IDs and network failures
üìÑ FILES TO MODIFY
client/src/components/admin/UserManagement.tsx - Add export button and functionality
server/routes/admin-routes.ts - Add export endpoint
server/services/user-management-service.ts - Add export service method
üí° IMPLEMENTATION NOTES
The export should include ALL user data that might be useful for analysis or migration
Include complete image URLs for profile pictures, star cards, and any uploaded assets
Format dates in ISO string format for readability
Include metadata about when and by whom the export was performed
Ensure the JSON is properly formatted and indented for readability
Handle edge cases where users might have partial data or missing images
Include both relative and absolute URLs for images where applicable
üñºÔ∏è IMAGE URL HANDLING
Extract profile picture URLs from the users.profilePicture field
Extract star card image URLs from the star_cards.imageUrl field
Include any uploaded files from the /uploads directory associated with the user
Provide both relative paths and full URLs where possible
Handle cases where image files might be missing or inaccessible
This feature will provide administrators with a comprehensive way to export user data for analysis, backup, or migration purposes while maintaining security and following existing application patterns. The inclusion of image URLs ensures that all visual assets associated with a user's profile and assessments are properly documented in the export.